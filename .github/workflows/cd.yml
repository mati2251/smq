name: Deploy to GitHub Packages

on:
  push:
    tags: [ "v*.*.*" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push-server
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./server
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/mati2251/smq-server:latest

          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image
        id: build-and-push-client
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./client
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/mati2251/smq-client:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  lib-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    defaults:
      run:
        working-directory: ./client

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.1.0
      - name: Publish package
        if: github.event_name != 'pull_request'
        uses: gradle/gradle-build-action@v2.10.0
        with:
          arguments: :lib:publish
          build-root-directory: ./client
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
